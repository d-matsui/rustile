name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
        - os: ubuntu-24.04
          target: x86_64-unknown-linux-gnu
          artifact_name: rustile
          asset_name: rustile-linux-x86_64
        - os: ubuntu-24.04
          target: x86_64-unknown-linux-musl
          artifact_name: rustile
          asset_name: rustile-linux-x86_64-musl
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        
    - name: Install X11 dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-24.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y libx11-dev libxcb1-dev pkg-config
        
    - name: Install musl tools (for musl target)
      if: matrix.target == 'x86_64-unknown-linux-musl'
      run: |
        sudo apt-get install -y musl-tools
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.target }}-cargo-
          
    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}
      
    - name: Strip binary (Linux)
      if: matrix.os == 'ubuntu-24.04'
      run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
      
    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v1
      with:
        files: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        generate_release_notes: true
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}