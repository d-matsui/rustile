name: CI

on:
  push:
    branches: [ main, 'feature/*' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Combined test and quality checks job to reduce overhead
  test-suite:
    name: Test Suite
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: 1.89
        components: rustfmt, clippy
        
    - name: Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends libx11-dev libxcb1-dev pkg-config
        
    # Run all quality checks in parallel where possible
    - name: Check formatting
      run: cargo fmt --all -- --check
      
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Run tests
      run: cargo test --verbose
      
    - name: Check documentation
      run: cargo doc --no-deps --document-private-items --quiet

  # Separate security job that can run in parallel
  security-audit:
    name: Security Audit
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: 1.89
      
    - name: Cache cargo audit binary
      uses: actions/cache@v4
      id: cache-cargo-audit
      with:
        path: ~/.cargo/bin/cargo-audit
        key: cargo-audit-${{ runner.os }}
        
    - name: Install cargo-audit
      run: |
        # Ensure cargo bin directory is in PATH
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
        # Check if cargo-audit exists and install if not
        if [ ! -f "$HOME/.cargo/bin/cargo-audit" ]; then
          echo "Installing cargo-audit..."
          cargo install cargo-audit --locked
        else
          echo "cargo-audit already cached"
        fi
      
    - name: Run security audit
      run: cargo audit

  # Release build only when needed (PRs to main or pushes to main/develop)
  release-build:
    name: Release Build
    runs-on: ubuntu-24.04
    needs: [test-suite, security-audit]
    if: |
      github.event_name == 'push' && github.ref == 'refs/heads/main' ||
      (github.event_name == 'pull_request' && github.base_ref == 'main')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: 1.89
      
    - name: Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends libx11-dev libxcb1-dev pkg-config
        
    - name: Build release binary
      run: cargo build --release --verbose
      
    - name: Upload release artifact
      uses: actions/upload-artifact@v5
      with:
        name: rustile-${{ github.sha }}
        path: target/release/rustile
        retention-days: 30