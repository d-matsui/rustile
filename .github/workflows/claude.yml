name: Claude Code Assistant

on:
  # Manual trigger via @claude mention
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]
  
  # Automatic PR review
  pull_request:
    types: [opened, synchronize]

jobs:
  claude-interactive:
    name: Claude Interactive
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Run Claude Code Interactive
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          additional_permissions: |
            actions: read

  claude-auto-review:
    name: Claude Auto Review
    # Auto-review all PRs (use [skip-review] or [WIP] in title to disable)
    if: |
      github.event_name == 'pull_request' &&
      !contains(github.event.pull_request.title, '[skip-review]') &&
      !contains(github.event.pull_request.title, '[WIP]')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Run Claude Auto Review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          use_sticky_comment: true
          allowed_bots: dependabot
          direct_prompt: |
            Please review this pull request and provide constructive feedback on:
            
            **Code Quality & Best Practices:**
            - Rust idioms and best practices
            - Error handling patterns
            - Code organization and structure
            
            **Functionality & Correctness:**
            - Logic errors or potential bugs
            - Edge case handling
            - Window management correctness
            
            **Performance & Efficiency:**
            - Memory usage patterns
            - X11 API usage efficiency
            - Algorithm complexity
            
            **Testing & Documentation:**
            - Test coverage for new features
            - Documentation completeness
            - Example usage clarity
            
            **Security Considerations:**
            - Input validation
            - X11 security best practices
            - Configuration validation
            
            Be encouraging and provide specific, actionable suggestions with code examples where helpful.
            Focus on the most important issues first.